Install-Module -Name ImportExcel -Scope CurrentUser
# PowerShell Script to Extract Global Address List (GAL) with Multi-Threading
param (
    [string]$OutputPath = "C:\Users\Public\GAL_Contacts.xlsx",
    [string]$LogFilePath = "C:\Users\Public\GAL_Export_Log.txt",
    [int]$BatchSize = 1000
)

# Import Required Module
Import-Module ActiveDirectory
Import-Module ImportExcel

# Initialize Logging
Start-Transcript -Path $LogFilePath -Append
Write-Host "Export started at $(Get-Date)" -ForegroundColor Green

# Get the Total Count of GAL Records
Write-Host "Fetching total count of Global Address List records..."
$TotalRecords = (Get-ADUser -Filter *).Count
Write-Host "Total Records Found: $TotalRecords" -ForegroundColor Cyan

# Prepare Data Storage
$contacts = @()
$Counter = 0

# Multi-Threading Setup (Parallel Processing)
$MaxThreads = 8
$Jobs = @()

Write-Host "Starting parallel processing with $MaxThreads threads..." -ForegroundColor Green

# Fetch AD User Data with Multi-Threading
$Users = Get-ADUser -Filter * -Properties DisplayName, GivenName, Surname, Mail, Title, Department, `
    Office, City, State, Country, Manager, TelephoneNumber, MobilePhone, DirectReports

$Users | ForEach-Object -Parallel {
    $user = $_
    $ManagerEmail = if ($user.Manager) { (Get-ADUser $user.Manager).Mail } else { "N/A" }
    $DirectReportsCount = if ($user.DirectReports) { $user.DirectReports.Count } else { 0 }

    # Collect User Data
    [PSCustomObject]@{
        FullName = $user.DisplayName
        FirstName = $user.GivenName
        LastName = $user.Surname
        Email = $user.Mail
        JobTitle = $user.Title
        Department = $user.Department
        OfficeLocation = $user.Office
        City = $user.City
        State = $user.State
        Country = $user.Country
        WorkPhone = $user.TelephoneNumber
        Mobile = $user.MobilePhone
        ManagerEmail = $ManagerEmail
        DirectReportsCount = $DirectReportsCount
    }

} -AsJob -ThrottleLimit $MaxThreads | ForEach-Object { $Jobs += $_ }

# Monitor Job Completion
Write-Host "Processing records... This may take a while." -ForegroundColor Yellow
while ($Jobs | Where-Object { $_.State -eq "Running" }) {
    Write-Host "Processed $Counter/$TotalRecords records..."
    Start-Sleep -Seconds 10
    $Counter += $BatchSize
}

# Retrieve Job Results
$contacts = $Jobs | ForEach-Object { Receive-Job -Job $_ }
$Jobs | Remove-Job

# Export to Excel
Write-Host "Writing results to Excel..." -ForegroundColor Cyan
$contacts | Export-Excel -Path $OutputPath -WorksheetName "GAL_Contacts" -AutoSize -TableStyle Medium2

# Completion Message
Write-Host "Export completed successfully! Data saved to $OutputPath" -ForegroundColor Green
Stop-Transcript
