import { Component, Input, OnInit } from '@angular/core';
import * as Highcharts from 'highcharts';
import HC_more from 'highcharts/highcharts-more';
HC_more(Highcharts); // Initialize gauge features

@Component({
  selector: 'app-weighted-gauge',
  templateUrl: './weighted-gauge.component.html',
  styleUrls: ['./weighted-gauge.component.css']
})
export class WeightedGaugeComponent implements OnInit {
  // Expecting each user to have a 'commits' object, e.g., { java: number, css: number, html: number, ... }
  @Input() user: any;
  
  Highcharts: typeof Highcharts = Highcharts;
  chartOptions: Highcharts.Options;
  
  weightedScore: number;

  ngOnInit(): void {
    this.weightedScore = this.calculateWeightedScore(this.user.commits);
    this.initChart();
  }

  calculateWeightedScore(commits: any): number {
    // Define the weights for each skill
    const weights = {
      java: 0.6,
      css: 0.05,
      html: 0.05
      // Add additional skills and their corresponding weights as needed
    };
    let weightedSum = 0;
    let totalWeight = 0;
    for (const skill in weights) {
      if (weights.hasOwnProperty(skill)) {
        weightedSum += (commits[skill] || 0) * weights[skill];
        totalWeight += weights[skill];
      }
    }
    // If totalWeight sums to 1 (or you want to normalize), simply return the weightedSum
    return totalWeight > 0 ? weightedSum / totalWeight : 0;
  }

  initChart(): void {
    this.chartOptions = {
      chart: {
        type: 'gauge',
        plotBackgroundColor: null,
        plotBorderWidth: 0,
        plotShadow: false,
        height: 120,
        width: 120
      },
      title: {
        text: null
      },
      pane: {
        startAngle: -150,
        endAngle: 150
      },
      yAxis: {
        min: 0,
        max: 100,
        title: {
          text: 'Score'
        },
        plotBands: [{
          from: 0,
          to: 50,
          color: '#DF5353' // red
        }, {
          from: 50,
          to: 75,
          color: '#DDDF0D' // yellow
        }, {
          from: 75,
          to: 100,
          color: '#55BF3B' // green
        }]
      },
      series: [{
        name: 'Score',
        type: 'gauge',
        data: [this.weightedScore],
        tooltip: {
          valueSuffix: ' pts'
        }
      }],
      credits: {
        enabled: false
      }
    };
  }
}

<highcharts-chart 
  [Highcharts]="Highcharts"
  [options]="chartOptions"
  style="width: 120px; height: 120px; display: block;">
</highcharts-chart>

/* Style as needed—here’s a basic host layout */
:host {
  display: inline-block;
  margin-left: 10px;
}
